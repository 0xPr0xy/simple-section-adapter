{"tagline":"The SIMPLEST Section Adapter for Android","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-34499174-1","body":"This is the SIMPLEST Section Adapter available for Android's ListView. It works with your existing list adapters. Just include the [latest jar](https://github.com/ragunathjawahar/simple-section-adapter/downloads) or the [sources](https://github.com/ragunathjawahar/simple-section-adapter/zipball/master) to your Android project.\r\n\r\n### Usage\r\n```\r\n// 1. Create a Sectionizer    \r\nclass BookSectionizer implements Sectionizer<Book> {\r\n\r\n    @Override\r\n    public String getSectionTitleForItem(Book book) {\r\n        return book.getGenre();\r\n    }\r\n}\r\n\r\n// 2. Wrap your existing adapter with the SimpleSectionAdapter\r\nSimpleSectionAdapter<Book> sectionAdapter = new SimpleSectionAdapter<Book>(context, \r\n            yourBookAdapter, R.layout.section_header, R.id.title, \r\n            new BookSectionizer());\r\n\r\n// 3. Set the SimpleSectionAdapter to your ListView\r\nlistView.setAdapter(sectionAdapter);\r\n```\r\n\r\n**NOTE: The data source (Cursor, ArrayList or Array) backed by your adapter should be sorted logically in the order you want them to be sectioned. For instance, if you want to section your books by genres, they have to be sorted by genres before you wrap it within the SimpleSectionAdapter.**","name":"Simple Section Adapter"}